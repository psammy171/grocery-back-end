// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum RoleEnum {
  USER
  ADMIN
}

model Role {
  id     String   @id @default(uuid())
  role   RoleEnum
  user   User?    @relation(fields: [userId], references: [id])
  userId String?
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  roles    Role[]
  password String
  order    Order[]
  cart     Cart?
}

model Cart {
  id     String      @id @default(uuid())
  items  OrderItem[]
  user   User        @relation(fields: [userId], references: [id])
  userId String      @unique
}

model GroceryItem {
  id        String      @id @default(uuid())
  name      String
  price     Int
  archived  Boolean     @default(false)
  orderItem OrderItem[]
}

model Order {
  id     String      @id @default(uuid())
  user   User        @relation(fields: [userId], references: [id])
  userId String
  items  OrderItem[]
}

model OrderItem {
  id            String       @id @default(uuid())
  quantity      Int
  groceryItemId String
  item          GroceryItem? @relation(fields: [groceryItemId], references: [id])
  Order         Order?       @relation(fields: [orderId], references: [id])
  orderId       String?
  cart          Cart?        @relation(fields: [cartId], references: [id])
  cartId        String?
}
